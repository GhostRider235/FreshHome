package com.FreshHome.app.model;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;

import jakarta.annotation.Generated;

import java.time.LocalDateTime;
import org.bson.codecs.pojo.annotations.BsonProperty;
import org.bson.types.ObjectId;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.format.annotation.DateTimeFormat;
import java.time.OffsetDateTime;


import java.util.*;

/**
 * Generated by MongoDB Relational Migrator
 * https://www.mongodb.com/products/relational-migrator
 * Collection: solicitud
 * Language: Java
 * Template: Spring Data
 * Generated on 2025-05-10
 */
@JsonTypeName("solicitud")
@Generated(value = "com.mongodb.migrator.application.codegen.config.java.JavaSpringCodegenConfig", date = "2025-05-10T12:40:10.597498100-05:00[America/Bogota]", comments = "Generator version: 7.10.0")@Document("solicitud")
public class SolicitudEntity {

  @BsonProperty("_id")
  private ObjectId id = null;

  @BsonProperty("calificacionCliente")
  private Integer calificacionCliente;

  @BsonProperty("calificacionEmpleado")
  private Integer calificacionEmpleado;

  @BsonProperty("disponibilidad")
  private Boolean disponibilidad;

  @BsonProperty("fechaSolicitud")
  @DateTimeFormat(iso = DateTimeFormat.ISO.DATE_TIME)
  private LocalDateTime fechaSolicitud;

  @BsonProperty("idUsuarioAutor")
  private Integer idUsuarioAutor;

  @BsonProperty("idUsuarioAplicante")
  private Integer idUsuarioAplicante;

  @BsonProperty("idSolicitud")
  private Integer idSolicitud;

  @BsonProperty("ocupados")
  private Boolean ocupados;

  @BsonProperty("tarifa")
  private Integer tarifa;

  @BsonProperty("observacioneCliente")
  private String observacioneCliente;

  @BsonProperty("observacioneEmpleado")
  private String observacioneEmpleado;

  @BsonProperty("descripcion")
  private String descripcion;

  @BsonProperty("direccion")
  private String direccion;

  @BsonProperty("titulo")
  private String titulo;

  @BsonProperty("pago")
  private SolicitudPagoEntity pago;

  public SolicitudEntity id(ObjectId id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  
  @JsonProperty("_id")
  public ObjectId getId() {
    return id;
  }

  public void setId(ObjectId id) {
    this.id = id;
  }

  public SolicitudEntity calificacionCliente(Integer calificacionCliente) {
    this.calificacionCliente = calificacionCliente;
    return this;
  }

  /**
   * Get calificacionCliente
   * @return calificacionCliente
   */
  
  @JsonProperty("calificacionCliente")
  public Integer getCalificacionCliente() {
    return calificacionCliente;
  }

  public void setCalificacionCliente(Integer calificacionCliente) {
    this.calificacionCliente = calificacionCliente;
  }

  public SolicitudEntity calificacionEmpleado(Integer calificacionEmpleado) {
    this.calificacionEmpleado = calificacionEmpleado;
    return this;
  }

  /**
   * Get calificacionEmpleado
   * @return calificacionEmpleado
   */
  
  @JsonProperty("calificacionEmpleado")
  public Integer getCalificacionEmpleado() {
    return calificacionEmpleado;
  }

  public void setCalificacionEmpleado(Integer calificacionEmpleado) {
    this.calificacionEmpleado = calificacionEmpleado;
  }

  public SolicitudEntity disponibilidad(Boolean disponibilidad) {
    this.disponibilidad = disponibilidad;
    return this;
  }

  /**
   * Get disponibilidad
   * @return disponibilidad
   */
  
  @JsonProperty("disponibilidad")
  public Boolean getDisponibilidad() {
    return disponibilidad;
  }

  public void setDisponibilidad(Boolean disponibilidad) {
    this.disponibilidad = disponibilidad;
  }

  public SolicitudEntity fechaSolicitud(LocalDateTime fechaSolicitud) {
    this.fechaSolicitud = fechaSolicitud;
    return this;
  }

  /**
   * Get fechaSolicitud
   * @return fechaSolicitud
   */
  
  @JsonProperty("fechaSolicitud")
  public LocalDateTime getFechaSolicitud() {
    return fechaSolicitud;
  }

  public void setFechaSolicitud(LocalDateTime fechaSolicitud) {
    this.fechaSolicitud = fechaSolicitud;
  }

  public SolicitudEntity idUsuarioAutor(Integer idUsuarioAutor) {
    this.idUsuarioAutor = idUsuarioAutor;
    return this;
  }

  /**
   * Get idUsuarioAutor
   * @return idUsuarioAutor
   */
  
  @JsonProperty("idUsuarioAutor")
  public Integer getIdUsuarioAutor() {
    return idUsuarioAutor;
  }

  public void setIdUsuarioAutor(Integer idUsuarioAutor) {
    this.idUsuarioAutor = idUsuarioAutor;
  }

  public SolicitudEntity idUsuarioAplicante(Integer idUsuarioAplicante) {
    this.idUsuarioAplicante = idUsuarioAplicante;
    return this;
  }

  /**
   * Get idUsuarioAplicante
   * @return idUsuarioAplicante
   */
  
  @JsonProperty("idUsuarioAplicante")
  public Integer getIdUsuarioAplicante() {
    return idUsuarioAplicante;
  }

  public void setIdUsuarioAplicante(Integer idUsuarioAplicante) {
    this.idUsuarioAplicante = idUsuarioAplicante;
  }

  public SolicitudEntity idSolicitud(Integer idSolicitud) {
    this.idSolicitud = idSolicitud;
    return this;
  }

  /**
   * Get idSolicitud
   * @return idSolicitud
   */
  
  @JsonProperty("idSolicitud")
  public Integer getIdSolicitud() {
    return idSolicitud;
  }

  public void setIdSolicitud(Integer idSolicitud) {
    this.idSolicitud = idSolicitud;
  }

  public SolicitudEntity ocupados(Boolean ocupados) {
    this.ocupados = ocupados;
    return this;
  }

  /**
   * Get ocupados
   * @return ocupados
   */
  
  @JsonProperty("ocupados")
  public Boolean getOcupados() {
    return ocupados;
  }

  public void setOcupados(Boolean ocupados) {
    this.ocupados = ocupados;
  }

  public SolicitudEntity tarifa(Integer tarifa) {
    this.tarifa = tarifa;
    return this;
  }

  /**
   * Get tarifa
   * @return tarifa
   */
  
  @JsonProperty("tarifa")
  public Integer getTarifa() {
    return tarifa;
  }

  public void setTarifa(Integer tarifa) {
    this.tarifa = tarifa;
  }

  public SolicitudEntity observacioneCliente(String observacioneCliente) {
    this.observacioneCliente = observacioneCliente;
    return this;
  }

  /**
   * Get observacioneCliente
   * @return observacioneCliente
   */
  
  @JsonProperty("observacioneCliente")
  public String getObservacioneCliente() {
    return observacioneCliente;
  }

  public void setObservacioneCliente(String observacioneCliente) {
    this.observacioneCliente = observacioneCliente;
  }

  public SolicitudEntity observacioneEmpleado(String observacioneEmpleado) {
    this.observacioneEmpleado = observacioneEmpleado;
    return this;
  }

  /**
   * Get observacioneEmpleado
   * @return observacioneEmpleado
   */
  
  @JsonProperty("observacioneEmpleado")
  public String getObservacioneEmpleado() {
    return observacioneEmpleado;
  }

  public void setObservacioneEmpleado(String observacioneEmpleado) {
    this.observacioneEmpleado = observacioneEmpleado;
  }

  public SolicitudEntity descripcion(String descripcion) {
    this.descripcion = descripcion;
    return this;
  }

  /**
   * Get descripcion
   * @return descripcion
   */
  
  @JsonProperty("descripcion")
  public String getDescripcion() {
    return descripcion;
  }

  public void setDescripcion(String descripcion) {
    this.descripcion = descripcion;
  }

  public SolicitudEntity direccion(String direccion) {
    this.direccion = direccion;
    return this;
  }

  /**
   * Get direccion
   * @return direccion
   */
  
  @JsonProperty("direccion")
  public String getDireccion() {
    return direccion;
  }

  public void setDireccion(String direccion) {
    this.direccion = direccion;
  }

  public SolicitudEntity titulo(String titulo) {
    this.titulo = titulo;
    return this;
  }

  /**
   * Get titulo
   * @return titulo
   */
  
  @JsonProperty("titulo")
  public String getTitulo() {
    return titulo;
  }

  public void setTitulo(String titulo) {
    this.titulo = titulo;
  }

  public SolicitudEntity pago(SolicitudPagoEntity pago) {
    this.pago = pago;
    return this;
  }

  /**
   * Get pago
   * @return pago
   */
  
  @JsonProperty("pago")
  public SolicitudPagoEntity getPago() {
    return pago;
  }

  public void setPago(SolicitudPagoEntity pago) {
    this.pago = pago;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SolicitudEntity solicitud = (SolicitudEntity) o;
    return Objects.equals(this.id, solicitud.id) &&
        Objects.equals(this.calificacionCliente, solicitud.calificacionCliente) &&
        Objects.equals(this.calificacionEmpleado, solicitud.calificacionEmpleado) &&
        Objects.equals(this.disponibilidad, solicitud.disponibilidad) &&
        Objects.equals(this.fechaSolicitud, solicitud.fechaSolicitud) &&
        Objects.equals(this.idUsuarioAutor, solicitud.idUsuarioAutor) &&
        Objects.equals(this.idUsuarioAplicante, solicitud.idUsuarioAplicante) &&
        Objects.equals(this.idSolicitud, solicitud.idSolicitud) &&
        Objects.equals(this.ocupados, solicitud.ocupados) &&
        Objects.equals(this.tarifa, solicitud.tarifa) &&
        Objects.equals(this.observacioneCliente, solicitud.observacioneCliente) &&
        Objects.equals(this.observacioneEmpleado, solicitud.observacioneEmpleado) &&
        Objects.equals(this.descripcion, solicitud.descripcion) &&
        Objects.equals(this.direccion, solicitud.direccion) &&
        Objects.equals(this.titulo, solicitud.titulo) &&
        Objects.equals(this.pago, solicitud.pago);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, calificacionCliente, calificacionEmpleado, disponibilidad, fechaSolicitud, idUsuarioAutor, idUsuarioAplicante, idSolicitud, ocupados, tarifa, observacioneCliente, observacioneEmpleado, descripcion, direccion, titulo, pago);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SolicitudEntity {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    calificacionCliente: ").append(toIndentedString(calificacionCliente)).append("\n");
    sb.append("    calificacionEmpleado: ").append(toIndentedString(calificacionEmpleado)).append("\n");
    sb.append("    disponibilidad: ").append(toIndentedString(disponibilidad)).append("\n");
    sb.append("    fechaSolicitud: ").append(toIndentedString(fechaSolicitud)).append("\n");
    sb.append("    idUsuarioAutor: ").append(toIndentedString(idUsuarioAutor)).append("\n");
    sb.append("    idUsuarioAplicante: ").append(toIndentedString(idUsuarioAplicante)).append("\n");
    sb.append("    idSolicitud: ").append(toIndentedString(idSolicitud)).append("\n");
    sb.append("    ocupados: ").append(toIndentedString(ocupados)).append("\n");
    sb.append("    tarifa: ").append(toIndentedString(tarifa)).append("\n");
    sb.append("    observacioneCliente: ").append(toIndentedString(observacioneCliente)).append("\n");
    sb.append("    observacioneEmpleado: ").append(toIndentedString(observacioneEmpleado)).append("\n");
    sb.append("    descripcion: ").append(toIndentedString(descripcion)).append("\n");
    sb.append("    direccion: ").append(toIndentedString(direccion)).append("\n");
    sb.append("    titulo: ").append(toIndentedString(titulo)).append("\n");
    sb.append("    pago: ").append(toIndentedString(pago)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

