package com.FreshHome.app.model;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;

import jakarta.annotation.Generated;

import org.bson.codecs.pojo.annotations.BsonProperty;
import org.bson.types.ObjectId;
import org.springframework.data.mongodb.core.mapping.Document;
import java.time.OffsetDateTime;


import java.util.*;

/**
 * Generated by MongoDB Relational Migrator
 * https://www.mongodb.com/products/relational-migrator
 * Collection: habilidades
 * Language: Java
 * Template: Spring Data
 * Generated on 2025-05-10
 */
@JsonTypeName("habilidades")
@Generated(value = "com.mongodb.migrator.application.codegen.config.java.JavaSpringCodegenConfig", date = "2025-05-10T12:40:10.813945400-05:00[America/Bogota]", comments = "Generator version: 7.10.0")@Document("habilidades")
public class HabilidadesEntity {

  @BsonProperty("_id")
  private ObjectId id = null;

  @BsonProperty("idUsuario")
  private Integer idUsuario;

  @BsonProperty("habilidad")
  private String habilidad;

  @BsonProperty("añosExperiencia")
  private Integer añosExperiencia;

  public HabilidadesEntity id(ObjectId id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  
  @JsonProperty("_id")
  public ObjectId getId() {
    return id;
  }

  public void setId(ObjectId id) {
    this.id = id;
  }

  public HabilidadesEntity idUsuario(Integer idUsuario) {
    this.idUsuario = idUsuario;
    return this;
  }

  /**
   * Get idUsuario
   * @return idUsuario
   */
  
  @JsonProperty("idUsuario")
  public Integer getIdUsuario() {
    return idUsuario;
  }

  public void setIdUsuario(Integer idUsuario) {
    this.idUsuario = idUsuario;
  }

  public HabilidadesEntity habilidad(String habilidad) {
    this.habilidad = habilidad;
    return this;
  }

  /**
   * Get habilidad
   * @return habilidad
   */
  
  @JsonProperty("habilidad")
  public String getHabilidad() {
    return habilidad;
  }

  public void setHabilidad(String habilidad) {
    this.habilidad = habilidad;
  }

  public HabilidadesEntity añosExperiencia(Integer añosExperiencia) {
    this.añosExperiencia = añosExperiencia;
    return this;
  }

  /**
   * Get añosExperiencia
   * @return añosExperiencia
   */
  
  @JsonProperty("añosExperiencia")
  public Integer getAñosExperiencia() {
    return añosExperiencia;
  }

  public void setAñosExperiencia(Integer añosExperiencia) {
    this.añosExperiencia = añosExperiencia;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HabilidadesEntity habilidades = (HabilidadesEntity) o;
    return Objects.equals(this.id, habilidades.id) &&
        Objects.equals(this.idUsuario, habilidades.idUsuario) &&
        Objects.equals(this.habilidad, habilidades.habilidad) &&
        Objects.equals(this.añosExperiencia, habilidades.añosExperiencia);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, idUsuario, habilidad, añosExperiencia);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HabilidadesEntity {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idUsuario: ").append(toIndentedString(idUsuario)).append("\n");
    sb.append("    habilidad: ").append(toIndentedString(habilidad)).append("\n");
    sb.append("    añosExperiencia: ").append(toIndentedString(añosExperiencia)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

